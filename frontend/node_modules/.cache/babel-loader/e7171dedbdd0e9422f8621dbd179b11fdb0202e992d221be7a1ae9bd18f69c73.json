{"ast":null,"code":"\"use strict\";\n\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertToBuffer = void 0;\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from ? function (input) {\n  return Buffer.from(input, \"utf8\");\n} : util_utf8_browser_1.fromUtf8;\nfunction convertToBuffer(data) {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n  return new Uint8Array(data);\n}\nexports.convertToBuffer = convertToBuffer;","map":{"version":3,"mappings":";;AAAA;AACA;;;;;AAGA;AAEA;AACA,IAAMA,QAAQ,GACZ,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,IAAI,GACxC,UAACC,KAAa;EAAK,aAAM,CAACD,IAAI,CAACC,KAAK,EAAE,MAAM,CAAC;AAA1B,CAA0B,GAC7CC,4BAAe;AAErB,SAAgBC,eAAe,CAACC,IAAgB;EAC9C;EACA,IAAIA,IAAI,YAAYC,UAAU,EAAE,OAAOD,IAAI;EAE3C,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAON,QAAQ,CAACM,IAAI,CAAC;;EAGvB,IAAIE,WAAW,CAACC,MAAM,CAACH,IAAI,CAAC,EAAE;IAC5B,OAAO,IAAIC,UAAU,CACnBD,IAAI,CAACI,MAAM,EACXJ,IAAI,CAACK,UAAU,EACfL,IAAI,CAACM,UAAU,GAAGL,UAAU,CAACM,iBAAiB,CAC/C;;EAGH,OAAO,IAAIN,UAAU,CAACD,IAAI,CAAC;AAC7B;AAjBAQ","names":["fromUtf8","Buffer","from","input","util_utf8_browser_1","convertToBuffer","data","Uint8Array","ArrayBuffer","isView","buffer","byteOffset","byteLength","BYTES_PER_ELEMENT","exports"],"sources":["D:\\Users\\idiez\\Desktop\\Spring 23\\CS499 Capstone\\Repository\\CS499_Capstone_Repository\\frontend\\node_modules\\@aws-crypto\\util\\src\\convertToBuffer.ts"],"sourcesContent":["// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 as fromUtf8Browser } from \"@aws-sdk/util-utf8-browser\";\n\n// Quick polyfill\nconst fromUtf8 =\n  typeof Buffer !== \"undefined\" && Buffer.from\n    ? (input: string) => Buffer.from(input, \"utf8\")\n    : fromUtf8Browser;\n\nexport function convertToBuffer(data: SourceData): Uint8Array {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}